#!/usr/bin/env bash

# kye
# 2014.06.03
# 2014.06.21

# wax <instruction> <module>
# only wax can log underline & non-indented!
# modules can log wait, stop, good, fail

# vars {
modules="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
logFile="$(cd "$(dirname "${BASH_SOURCE[0]}")"/logs && pwd)/wax.log"
hostName="$HOSTNAME"
# }

# styles {
sul=$(tput smul)    # underline
sf0=$(tput setaf 0) # fore black
sfr=$(tput setaf 1) # fore red
sfg=$(tput setaf 2) # fore green
sfy=$(tput setaf 3) # fore yellow
sfb=$(tput setaf 4) # fore blue
sfm=$(tput setaf 5) # fore magenta
sfc=$(tput setaf 6) # fore cyan
sfw=$(tput setaf 7) # fore white
sb0=$(tput setab 0) # back black
sbr=$(tput setab 1) # back red
sbg=$(tput setab 2) # back green
sby=$(tput setab 3) # back yellow
sbb=$(tput setab 4) # back blue
sbm=$(tput setab 5) # back magenta
sbc=$(tput setab 6) # back cyan
sbw=$(tput setab 7) # back white
srs=$(tput sgr0)    # reset
#echo "${RED}this is red ${NORMAL}this is normal"
# }

# icons {
iwax0="\xF0\x9F\x8C\x91 " # moon 0.00 new
iwax1="\xF0\x9F\x8C\x92 " # moon 0.25 waxing crescent
iwax2="\xF0\x9F\x8C\x93 " # moon 0.50 first quarter
iwax3="\xF0\x9F\x8C\x94 " # moon 0.75 waxing gibbous
iwax4="\xF0\x9F\x8C\x95 " # moon 1.00 full
iwax5="\xF0\x9F\x8C\x96 " # moon 0.75 waning gibbous
iwax6="\xF0\x9F\x8C\x97 " # moon 0.50 last quarter
iwax7="\xF0\x9F\x8C\x98 " # moon 0.25 waning crescent
iwax8="\xF0\x9F\x8C\x91 " # moon 0.00 new
iwait="\xE2\x8F\xB3 "     #
iwarn="\xE2\x9A\xA0 "     #
ifail="\xF0\x9F\x9A\xAB " #
igood="\xE2\x9C\x85 "     #
icros="\xE2\x9D\x8E "     #
ithis="\xF0\x9F\x91\x89 " #
ithup="\xF0\x9F\x91\x8D " #
ithdn="\xF0\x9F\x91\x8E " #
istop="\xE2\x9C\x8B "     #
# }

# logs {
function log {

	case $1 in

		title)

			printf "   ${sul}${sfc}$iwait $2...${srs}\n"

		;;

		wait)

			printf "   ${sfc}$iwait $2...${srs}"
			sleep 0.5

		;;

		stop)

			printf "\r   ${sfy}$istop $2${srs}                \n"

		;;

		good)

			printf "\r   ${sfg}$igood $2${srs}                \n"

		;;

		fail)

			printf "\r   ${sfr}$ifail $2${srs}                \n"

		;;

		info)

			printf "      $2\n"

		;;

	esac

}
# }

# waxon {
function waxon {

	printf "\n${sul}${sfy}$iwax4 wax on${srs}\n\n"

}
# }

# waxoff {
function waxoff {

	#args
	# $1 status code

	printf "\n${sul}${sfy}"
	[[ $1 == 0 ]] && printf "$iwax4" || printf "$iwax6"
	printf " wax off${srs}\n\n"
	exit $1

}
# }

waxon

# ensure not root {
if [[ $EUID -eq 0 ]]; then

	log "stop" "wax doesn't like running as root"
	log "info" "please try again without \"sudo\""
	waxoff 1

fi
# }

# ensure subshell {

# }

# ensure instruction provided {
if [ -z "$1" ]; then

	log "stop" "wax needs an instruction"
	log "info" "example: \"wax install\""
	waxoff 1

fi
# }

# ensure module provided {
if [ -z "$2" ]; then

	log "stop" "wax needs to know which module to $1"
	log "info" "example: \"wax $1 foo\""
	waxoff 1

fi
# }

# ensure module exists {
if [ ! -d "$modules/$2" ]; then

	log "stop" "wax can't find module \"$2\""
	log "info" "ensure it exists & try again"
	waxoff 1

fi
# }

# ensure module has instructions file {
if [ ! -f "$modules/$2/instructions.sh" ]; then

	log "stop" "module \"$2\" doesn't have an instructions file"
	log "info" "should have \"$modules/$2/instructions.sh\""
	waxoff 1

fi
# }

# source instructions {
source $modules/$2/instructions.sh
# }

# ensure instruction exists {
if [[ $(type -t $1) != "function" ]]; then

	log "stop" "module \"$2\" doesn't know how to \"$1\""
	log "info" "try something else"
	waxoff 1

fi
# }


# debug
#echo "EOF ${BASH_SOURCE}"

# all ok!
# run instruction for module in subshell
# wait for return
($1 "$@")
wait

# finish
waxoff $?
